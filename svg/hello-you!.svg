<svg width="220" height="50" viewBox="0 0 220 50" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      /* 
        This animation mimics the original GSAP effect:
        - from: opacity: 0, y: 40
        - to: opacity: 1, y: 0
        - ease: power3.out (approximated with a cubic-bezier)
        - The animation loops infinitely instead of being scroll-triggered.
      */
      @keyframes slide-up {
        0% {
          opacity: 0;
          transform: translateY(25px);
        }
        20% {
          opacity: 1;
          transform: translateY(0);
        }
        80% {
          opacity: 1;
          transform: translateY(0);
        }
        100% {
          opacity: 0;
          transform: translateY(-25px);
        }
      }

      /* Base styles for the text container */
      .text-container {
        /* Replicates "font-semibold" */
        font-weight: 600; 
        /* Replicates "text-2xl" */
        font-size: 24px; 
        /* A common, clean font stack */
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
        /* Replicates "text-center" */
        text-anchor: middle;
        /* Default text color (for GitHub light mode) */
        fill: #24292e;
      }
      
      /* Make it dark-mode compatible! */
      @media (prefers-color-scheme: dark) {
        .text-container {
          fill: #c9d1d9;
        }
      }

      /* Apply the animation to each character */
      .char {
        opacity: 0;
        animation: slide-up 5s infinite;
        /* This cubic-bezier is a close approximation of GSAP's "power3.out" ease */
        animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
      }
    </style>
  </defs>

  <!-- 
    The text is centered at 50% of the SVG width.
    Each character is wrapped in a <tspan> to be animated individually.
    The 'animation-delay' on each tspan creates the staggered effect,
    replicating the `delay` prop from the original component.
  -->
  <text x="50%" y="50%" dominant-baseline="middle" class="text-container">
    <tspan class="char" style="animation-delay: 0.1s">H</tspan>
    <tspan class="char" style="animation-delay: 0.2s">e</tspan>
    <tspan class="char" style="animation-delay: 0.3s">l</tspan>
    <tspan class="char" style="animation-delay: 0.4s">l</tspan>
    <tspan class="char" style="animation-delay: 0.5s">o</tspan>
    <tspan class="char" style="animation-delay: 0.6s">,</tspan>
    <!-- A non-breaking space is used here to ensure it's rendered -->
    <tspan class="char" style="animation-delay: 0.7s">&#160;</tspan>
    <tspan class="char" style="animation-delay: 0.8s">y</tspan>
    <tspan class="char" style="animation-delay: 0.9s">o</tspan>
    <tspan class="char" style="animation-delay: 1.0s">u</tspan>
    <tspan class="char" style="animation-delay: 1.1s">!</tspan>
  </text>
</svg>
